{"version":3,"sources":["components/hero.js","components/paginatedBody.js","components/foodTable.js","App.js","reportWebVitals.js","index.js"],"names":["Hero","className","PaginatedBody","items","initialPerPage","perPage","useState","currentPage","setCurrentPage","paginatedItems","setPaginatedItems","min","max","limit","setLimit","useEffect","slice","length","map","paginated","i","descricao","parseFloat","energia","kcal","toFixed","calcio","ferro","fibra_alimentar","lipideos","proteina","colSpan","disabled","onClick","Math","ceil","FoodTable","food","setFood","filteredFood","setFilteredFood","a","fetch","res","json","resFood","fetchFood","type","placeholder","onChange","e","filter","f","toLowerCase","toString","includes","target","value","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.168746cc.chunk.js","sourcesContent":["import React from 'react'\n\nconst Hero = () => {\n  return (\n    <div className=\"hero\">\n      <h1>Consultor de Alimentos</h1>\n      <h2>Escolha uma opção de exibição de alimentos</h2>\n    </div>\n  )\n}\n\nexport default Hero","import React, { useEffect, useState } from 'react'\n\nconst PaginatedBody = ({ items, perPage: initialPerPage }) => {\n  const [currentPage, setCurrentPage] = useState(0)\n  const [perPage] = useState(initialPerPage)\n  const [paginatedItems, setPaginatedItems] = useState([])\n  const [limit, setLimit] = useState({ min: 0, max: initialPerPage })\n\n  const handlePrev = () => limit.min !== 0 && (setCurrentPage(currentPage - 1), setLimit({ min: limit.min - perPage, max: limit.max - perPage }))\n  const handleNext = () => limit.max !== Math.ceil(items.length / perPage) && (setCurrentPage(currentPage + 1), setLimit({ min: limit.min + perPage, max: limit.max + perPage }))\n\n  useEffect(() => {\n    const { min, max } = limit\n    setPaginatedItems([...items.slice(min, max)])\n  }, [items, currentPage, perPage])\n\n  if(items.length === 0) return (\n    <>\n      <tbody>\n        <tr>\n          <td>Sem resultados!</td>\n        </tr>\n      </tbody>\n    </>\n  )\n\n  return (\n    <>\n      <tbody>\n        {paginatedItems.map((paginated, i) => (\n          <tr key={i}>\n            <td>{paginated.descricao}</td>\n            <td>{parseFloat(paginated.energia.kcal).toFixed(2)}</td>\n            <td>{parseFloat(paginated.calcio).toFixed(2)}</td>\n            <td>{parseFloat(paginated.ferro).toFixed(2)}</td>\n            <td>{parseFloat(paginated.fibra_alimentar).toFixed(2)}</td>\n            <td>{parseFloat(paginated.lipideos).toFixed(2)}</td>\n            <td>{parseFloat(paginated.proteina).toFixed(2)}</td>\n          </tr>\n        ))}\n      </tbody>\n      <tfoot>\n        <tr>\n          <td colSpan={5}>{items.length} total</td>\n          <td><button disabled={limit.min === 0} onClick={handlePrev}>Anterior</button></td>\n          <td><button disabled={limit.max >= items.length } onClick={handleNext}>Próximo</button></td>\n        </tr>\n      </tfoot>\n    </>\n  )\n}\n\nexport default PaginatedBody","import React, { useEffect, useState } from 'react'\nimport PaginatedBody from './paginatedBody'\n\nconst FoodTable = () => {\n  const [food, setFood] = useState([])\n  const [filteredFood, setFilteredFood] = useState([])\n\n  const searchItems = (e) => {\n    setFilteredFood(food.filter(f => (\n      f.descricao.toLowerCase() || \n      parseFloat(f.energia.kcal).toFixed(2) || \n      parseFloat(f.calcio).toFixed(2).toString() || \n      parseFloat(f.ferro).toFixed(2) || \n      parseFloat(f.fibra_alimentar).toFixed(2) || \n      parseFloat(f.lipideos).toFixed(2) || \n      parseFloat(f.proteina).toFixed(2)\n    ).includes(e.target.value.toLowerCase())))\n  }\n\n  useEffect(() => {\n    const fetchFood = async () => {\n      const res = await fetch(\"//raw.githubusercontent.com/EricRibeiro/Consultor-de-Alimentos/master/assets/js/lib/aliments.json\")\n      const resFood = await res.json()\n      \n      setFood(resFood)\n      setFilteredFood(resFood)\n    }\n\n    fetchFood()\n  }, [])\n\n  return (\n    <div className=\"food-table\">\n      <input type=\"text\" placeholder=\"Procure por descrição\" onChange={searchItems} />\n      <table>\n        <thead>\n          <tr>\n            <th>Descrição</th>\n            <th>Calorias</th>\n            <th>Cálcio</th>\n            <th>Ferro</th>\n            <th>Fibras</th>\n            <th>Lipídios</th>\n            <th>Proteínas</th>\n          </tr>\n        </thead>\n        <PaginatedBody items={filteredFood} perPage={12} />\n      </table>\n    </div>\n  )\n}\n\nexport default FoodTable","import './App.scss';\n\nimport Hero from './components/hero'\nimport FoodTable from './components/foodTable'\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Hero />\n      <FoodTable />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}